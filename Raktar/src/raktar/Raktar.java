/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package raktar;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mező Brigi gitta
 */
public class Raktar extends javax.swing.JFrame {

    DefaultTableModel modelRaktar;//globális változó

    /**
     * Creates new form Raktar
     */
    public Raktar() {
        initComponents(); //itt áll fel az ablak
        modelRaktar = (DefaultTableModel) tblRaktar.getModel();//értéket ad a változónak,átmásolja a model szerkezetet
        tblRaktar.setModel(modelRaktar);//hozzárendeli a beírt adatokat a táblázathoz
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRaktar = new javax.swing.JTable();
        lblAru = new javax.swing.JLabel();
        lblMennyiseg = new javax.swing.JLabel();
        lblAr = new javax.swing.JLabel();
        tfAru = new javax.swing.JTextField();
        tfMennyiseg = new javax.swing.JTextField();
        tfAr = new javax.swing.JTextField();
        btnFelvitel = new javax.swing.JButton();
        btnTorles = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnFrissites = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblRaktar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Áru", "Mennyiség", "Ár (Ft)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRaktar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRaktarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRaktar);

        lblAru.setText("Áru:");

        lblMennyiseg.setText("Mennyiség:");

        lblAr.setText("Ár:");

        tfAru.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfAruKeyTyped(evt);
            }
        });

        tfMennyiseg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMennyisegKeyTyped(evt);
            }
        });

        tfAr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfArKeyTyped(evt);
            }
        });

        btnFelvitel.setText("Felvitel");
        btnFelvitel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFelvitelActionPerformed(evt);
            }
        });

        btnTorles.setText("Törlés");
        btnTorles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTorlesActionPerformed(evt);
            }
        });

        lblMessage.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblMessage.setForeground(new java.awt.Color(251, 12, 12));
        lblMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnFrissites.setText("Frissítés");
        btnFrissites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFrissitesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnFelvitel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblAr, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblMennyiseg)
                                .addComponent(lblAru, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfAru, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(tfMennyiseg)
                                    .addComponent(tfAr))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addComponent(btnFrissites, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(btnTorles, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAru)
                    .addComponent(tfAru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMennyiseg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMennyiseg))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAr)
                    .addComponent(tfAr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFrissites)
                    .addComponent(btnFelvitel)
                    .addComponent(btnTorles))
                .addGap(12, 12, 12)
                .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExit)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * az if-ben megvizsgálja,hogy a kitöltendő mező nem üres-e 
     * ha nem az ,akkor létrehoz egy object nevű tömböt és hozzáadja a beírt adatokat, 
     * ha valamelyik üres hibaüzenetet ad
     * 
     * @param evt 
     */
    private void btnFelvitelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFelvitelActionPerformed

        String aru = tfAru.getText();
        String mennyiseg = tfMennyiseg.getText();
        String ar = tfAr.getText();

        if (!tfAru.getText().isEmpty() && !tfMennyiseg.getText().isEmpty()
                && !tfAr.getText().isEmpty()) {
            modelRaktar.addRow(new Object[]{aru, mennyiseg, ar});
            tfAru.setText(" "); /*kiüríti a mezőt a bevitel után*/

            tfMennyiseg.setText(" ");
            tfAr.setText(" ");
        } else {
            JOptionPane.showMessageDialog(this, "Nem maradhat üresen mező!", "Hiba!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnFelvitelActionPerformed

    /**
     * az első if-ben megvizsgálja van-e kijelölve sor,ha nincs hibaüzenetet ad(az első else ) ,
     * a második if-ben megvizsgálja hogy van-e sor a táblázatban(van-e kijelölhető adat),
     * ha nincs hibaüzenetet ad 
     * a második else-ben megerősítést kér a törlésre
     * @param evt
     */
    private void btnTorlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorlesActionPerformed
        lblMessage.setText("");

        if (tblRaktar.getSelectedRow() == -1) {
            if (tblRaktar.getRowCount() == 0) {
                lblMessage.setText("A táblázat üres!");
            } else {
                lblMessage.setText("Választanod kell egy árut!");
            }
        } else {
            modelRaktar.removeRow(tblRaktar.getSelectedRow());
            int reply = JOptionPane.showConfirmDialog(this, "Valóban töröljünk?", "Törlés megerősítése", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                tfAru.setText(" ");
                tfMennyiseg.setText(" ");
                tfAr.setText(" ");
            }
        }
    }//GEN-LAST:event_btnTorlesActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * 
     * az első if-ben megvizsgálja van-e kijelölve sor,ha nincs hibaüzenetet ad(az első else ) ,
     * a második if-ben megvizsgálja hogy van-e sor a táblázatban(van-e kijelölhető adat),
     * ha nincs hibaüzenetet ad,
     * a második else-ben megváltoztatja a kiválasztott adatokat
     *
     * @param evt 
     */
    private void btnFrissitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFrissitesActionPerformed
        lblMessage.setText("");

        if (tblRaktar.getSelectedRow() == -1) {
            if (tblRaktar.getRowCount() == 0) {
                lblMessage.setText("A táblázat üres!");
            } else {
                lblMessage.setText("Választanod kell egy árut!");
            }
        } else {
            modelRaktar.setValueAt(tfAru.getText(), tblRaktar.getSelectedRow(), 0);
            modelRaktar.setValueAt(tfMennyiseg.getText(), tblRaktar.getSelectedRow(), 1);
            modelRaktar.setValueAt(tfAr.getText(), tblRaktar.getSelectedRow(), 2);

        }
    }//GEN-LAST:event_btnFrissitesActionPerformed

    /**
     * ha ráklikkelek a sorra a benne lévő adatokat kiírja a text mezőkbe
     * @param evt 
     */
    private void tblRaktarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRaktarMouseClicked
        tfAru.setText(modelRaktar.getValueAt(tblRaktar.getSelectedRow(), 0).toString());
        tfMennyiseg.setText(modelRaktar.getValueAt(tblRaktar.getSelectedRow(), 1).toString());
        tfAr.setText(modelRaktar.getValueAt(tblRaktar.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_tblRaktarMouseClicked

    /**
     * az if -ben megnézi hogy a bevitt karakter szám-e,
     * ha nem,akkor hibaüzenetet ad
     * @param evt 
     */
    private void tfMennyisegKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMennyisegKeyTyped
        char k = evt.getKeyChar();
        if (!((k >= '0') && (k <= '9')
                || (k == KeyEvent.VK_BACK_SPACE)
                || (k == KeyEvent.VK_DELETE)
                || (k == KeyEvent.VK_CAPS_LOCK)
                || (k == KeyEvent.VK_SHIFT))) {

            evt.consume();
            JOptionPane.showMessageDialog(this, "Számot kell beírni!");
        }
    }//GEN-LAST:event_tfMennyisegKeyTyped

    /**
     * az if -ben megnézi hogy a bevitt karakter szám-e,
     * ha nem,akkor hibaüzenetet ad
     * @param evt 
     */
    private void tfArKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfArKeyTyped
        char k = evt.getKeyChar();
        if (!((k >= '0') && (k <= '9')
                || (k == KeyEvent.VK_BACK_SPACE)
                || (k == KeyEvent.VK_DELETE)
                || (k == KeyEvent.VK_CAPS_LOCK)
                || (k == KeyEvent.VK_SHIFT))) {

            evt.consume();
            JOptionPane.showMessageDialog(this, "Számot kell beírni!");
        }
    }//GEN-LAST:event_tfArKeyTyped

    /**
     * az if -ben megnézi hogy a bevitt karakter nem szám-e,
     * ha igen,akkor hibaüzenetet ad
     * @param evt 
     */
    private void tfAruKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAruKeyTyped
        char k = evt.getKeyChar();
        if (((k >= '0') && (k <= '9')
                || (k == KeyEvent.VK_BACK_SPACE)
                || (k == KeyEvent.VK_DELETE)
                || (k == KeyEvent.VK_CAPS_LOCK)
                || (k == KeyEvent.VK_SHIFT))) {

            evt.consume();
            JOptionPane.showMessageDialog(this, "Betüt kell beírni!");
        }
    }//GEN-LAST:event_tfAruKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Raktar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Raktar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Raktar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Raktar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Raktar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFelvitel;
    private javax.swing.JButton btnFrissites;
    private javax.swing.JButton btnTorles;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAr;
    private javax.swing.JLabel lblAru;
    private javax.swing.JLabel lblMennyiseg;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JTable tblRaktar;
    private javax.swing.JTextField tfAr;
    private javax.swing.JTextField tfAru;
    private javax.swing.JTextField tfMennyiseg;
    // End of variables declaration//GEN-END:variables
}
